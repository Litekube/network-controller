syntax = "proto3";

package pb;
// option go_package = "path;name";
option go_package = "./pb_gen;pb_gen";

//RPC接口
service LiteKubeNCService {
  rpc HelloWorld(HelloWorldRequest) returns (HelloWorldResponse) {}
  rpc GetBootStrapToken(GetBootStrapTokenRequest) returns (GetBootStrapTokenResponse) {}
  rpc CheckConnState(CheckConnStateRequest) returns (CheckConnResponse){}
  rpc UnRegister(UnRegisterRequest) returns (UnRegisterResponse){}
  rpc GetRegistedIp(GetRegistedIpRequest) returns (GetRegistedIpResponse){}
}

service LiteKubeNCBootstrapService {
  rpc GetToken(GetTokenRequest) returns (GetTokenResponse) {}
}

message HelloWorldRequest {
  string hello_text = 1;
}

message HelloWorldResponse {
  string thanks_text = 1;
}

message GetBootStrapTokenRequest {
  int64 expireTime=1;
}

message GetBootStrapTokenResponse {
  string code = 1;
  string message = 2;
  string bootStrapToken = 3;
  string cloudIp=4;
  string port=5;
}

message GetTokenRequest {
  string bootStrapToken=1;
}

message GetTokenResponse {
  string code = 1;
  string message = 2;
  string token = 3;
  string cloudIp=4;
  string networkServerPort=5;
  string GrpcCaCert=6;
  string GrpcClientKey=7;
  string GrpcClientCert=8;
  string NetworkCaCert=9;
  string NetworkClientKey=10;
  string NetworkClientCert=11;
}

message CheckConnStateRequest {
  string token = 1;
}

message CheckConnResponse {
  string code = 1;
  string message = 2;
  int32 connState = 3;
  string bindIp = 4;
}

message UnRegisterRequest {
  string token = 1;
}

message UnRegisterResponse {
  string code = 1;
  string message = 2;
  bool result = 3;
}

message GetRegistedIpRequest {
  string token = 1;
}

message GetRegistedIpResponse {
  string code = 1;
  string message = 2;
  string ip = 3;
}